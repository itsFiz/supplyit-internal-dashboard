import Layout from '@/components/Layout';
import { 
  Building2, 
  FileText, 
  Users, 
  CheckCircle, 
  Clock, 
  AlertCircle, 
  Shield,
  User,
} from 'lucide-react';

export default function LegalPage() {
  const legalData = {
    incorporation: {
      status: "pending",
      targetDate: "Early 2026",
      entityType: "Private Limited Company (Sdn Bhd)",
      location: "Malaysia",
      requirements: [
        "Post-MVP and pilot success",
        "Before closing pre-seed round",
        "Company Secretary appointment",
        "Director registration"
      ]
    },
    capTable: {
      current: [
        { name: "Fiz", role: "CEO/CTO", equity: 50, vesting: "No vesting" },
        { name: "Muhaimin", role: "COO", equity: 35, vesting: "No vesting" },
        { name: "Irfan", role: "CRO", equity: 5, vesting: "4-yr vesting, 1-yr cliff" },
        { name: "Luqman", role: "CLO", equity: 5, vesting: "4-yr vesting, 1-yr cliff" },
        { name: "Arif", role: "CE", equity: 5, vesting: "4-yr vesting, 1-yr cliff" }
      ],
      postPreSeed: [
        { name: "Fiz", role: "CEO/CTO", equity: 45, vesting: "No vesting" },
        { name: "Muhaimin", role: "COO", equity: 30, vesting: "No vesting" },
        { name: "Irfan", role: "CRO", equity: 5, vesting: "Vesting" },
        { name: "Luqman", role: "CLO", equity: 5, vesting: "Vesting" },
        { name: "Arif", role: "CE", equity: 5, vesting: "Vesting" },
        { name: "Pre-Seed Investors", role: "Investors", equity: 10, vesting: "N/A" }
      ]
    },
    agreements: [
      {
        name: "Founder Commitment Agreement (FCA)",
        status: "completed",
        description: "Role & title definition, vesting schedule, IP assignment clause",
        requirements: [
          "Vesting schedule (4 years with 1-year cliff for Irfan, Luqman, Arif)",
          "IP assignment clause",
          "Confidentiality & non-compete",
          "Dispute resolution clause"
        ]
      },
      {
        name: "Internal MoU (Pre-Incorporation)",
        status: "completed",
        description: "Outlines intent to form Sdn Bhd by mid-2026",
        requirements: [
          "States shared ownership and contribution terms",
          "Agreement on IP ownership during MVP development",
          "Signatory: All 5 founding members"
        ]
      },
      {
        name: "Tech/IP Ownership Clarification",
        status: "completed",
        description: "IP generated by Fiz to be assigned to SupplyIT Sdn Bhd",
        requirements: [
          "IP generated by Fiz (MVP, architecture, internal dashboard) to be assigned to SupplyIT Sdn Bhd upon incorporation",
          "Prevents future IP claims or disputes"
        ]
      }
    ],
    compliance: [
      {
        name: "NDAs and IP Transfer Agreements",
        status: "pending",
        description: "For freelancers, interns, vendors/contractors",
        dueDate: "Ongoing"
      },
      {
        name: "Terms of Service and Privacy Policy",
        status: "pending",
        description: "Before public launch",
        dueDate: "Q1 2026"
      },
      {
        name: "Shareholder Agreement",
        status: "pending",
        description: "Post-incorporation agreement",
        dueDate: "Q2 2026"
      }
    ],
    corporateStructure: {
      directors: [
        { position: "Director 1 (CEO & CTO)", holder: "Fiz", notes: "Primary founder & IP owner" },
        { position: "Director 2 (COO)", holder: "Muhaimin", notes: "Co-founder & logistics ops" },
        { position: "Company Secretary", holder: "[To appoint]", notes: "Required under SSM law" },
        { position: "Company Auditor", holder: "[Optional]", notes: "Post-revenue requirement" }
      ]
    }
  };

  const getStatusIcon = (status: string) => {
    switch (status) {
      case 'completed':
        return <CheckCircle className="w-5 h-5 text-green-500" />;
      case 'in-progress':
        return <Clock className="w-5 h-5 text-yellow-500" />;
      case 'pending':
        return <AlertCircle className="w-5 h-5 text-gray-500" />;
      default:
        return <AlertCircle className="w-5 h-5 text-gray-500" />;
    }
  };

  const getStatusColor = (status: string) => {
    switch (status) {
      case 'completed':
        return 'border-green-500/30 bg-green-500/10';
      case 'in-progress':
        return 'border-yellow-500/30 bg-yellow-500/10';
      case 'pending':
        return 'border-gray-500/30 bg-gray-500/10';
      default:
        return 'border-gray-500/30 bg-gray-500/10';
    }
  };

  return (
    <Layout>
      <div className="space-y-8">
        {/* Header */}
        <div className="text-center mb-8">
          <h1 className="text-3xl md:text-4xl font-bold text-white mb-4 flex items-center justify-center gap-3">
            <Building2 className="w-8 h-8 text-blue-400" />
            Legal & Structure
          </h1>
          <p className="text-gray-300 text-lg">
            Legal framework, incorporation status, and corporate structure
          </p>
        </div>

        {/* Incorporation Status */}
        <div className={`bg-white/10 backdrop-blur-md border rounded-2xl p-6 ${getStatusColor(legalData.incorporation.status)}`}>
          <div className="flex items-center gap-3 mb-6">
            <Building2 className="w-6 h-6 text-blue-400" />
            <h2 className="text-xl font-bold text-white">Incorporation Status</h2>
            {getStatusIcon(legalData.incorporation.status)}
          </div>

          <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
            <div>
              <h3 className="text-lg font-semibold text-white mb-3">Company Details</h3>
              <div className="space-y-3">
                <div className="flex items-center gap-3">
                  <span className="text-gray-400">Entity Type:</span>
                  <span className="text-white">{legalData.incorporation.entityType}</span>
                </div>
                <div className="flex items-center gap-3">
                  <span className="text-gray-400">Location:</span>
                  <span className="text-white">{legalData.incorporation.location}</span>
                </div>
                <div className="flex items-center gap-3">
                  <span className="text-gray-400">Target Date:</span>
                  <span className="text-white">{legalData.incorporation.targetDate}</span>
                </div>
              </div>
            </div>

            <div>
              <h3 className="text-lg font-semibold text-white mb-3">Requirements</h3>
              <ul className="space-y-2">
                {legalData.incorporation.requirements.map((req, index) => (
                  <li key={index} className="flex items-center gap-2 text-gray-300 text-sm">
                    <div className="w-1.5 h-1.5 bg-blue-400 rounded-full"></div>
                    {req}
                  </li>
                ))}
              </ul>
            </div>
          </div>
        </div>

        {/* Cap Table */}
        <div className="bg-white/10 backdrop-blur-md border border-white/20 rounded-2xl p-6">
          <div className="flex items-center gap-3 mb-6">
            <Users className="w-6 h-6 text-purple-400" />
            <h2 className="text-xl font-bold text-white">Cap Table</h2>
          </div>

          <div className="grid grid-cols-1 lg:grid-cols-2 gap-6">
            {/* Current Cap Table */}
            <div>
              <h3 className="text-lg font-semibold text-white mb-4">Current Structure</h3>
              <div className="space-y-3">
                {legalData.capTable.current.map((member, index) => (
                  <div key={index} className="bg-white/5 border border-white/10 rounded-xl p-4">
                    <div className="flex items-center justify-between mb-2">
                      <div>
                        <p className="text-white font-medium">{member.name}</p>
                        <p className="text-gray-400 text-sm">{member.role}</p>
                      </div>
                      <div className="text-right">
                        <p className="text-white font-bold text-lg">{member.equity}%</p>
                        <p className="text-gray-400 text-xs">{member.vesting}</p>
                      </div>
                    </div>
                  </div>
                ))}
              </div>
            </div>

            {/* Post Pre-Seed Cap Table */}
            <div>
              <h3 className="text-lg font-semibold text-white mb-4">Post Pre-Seed (Projected)</h3>
              <div className="space-y-3">
                {legalData.capTable.postPreSeed.map((member, index) => (
                  <div key={index} className="bg-white/5 border border-white/10 rounded-xl p-4">
                    <div className="flex items-center justify-between mb-2">
                      <div>
                        <p className="text-white font-medium">{member.name}</p>
                        <p className="text-gray-400 text-sm">{member.role}</p>
                      </div>
                      <div className="text-right">
                        <p className="text-white font-bold text-lg">{member.equity}%</p>
                        <p className="text-gray-400 text-xs">{member.vesting}</p>
                      </div>
                    </div>
                  </div>
                ))}
              </div>
            </div>
          </div>
        </div>

        {/* Key Agreements */}
        <div className="bg-white/10 backdrop-blur-md border border-white/20 rounded-2xl p-6">
          <div className="flex items-center gap-3 mb-6">
            <FileText className="w-6 h-6 text-green-400" />
            <h2 className="text-xl font-bold text-white">Key Agreements</h2>
          </div>

          <div className="space-y-4">
            {legalData.agreements.map((agreement, index) => (
              <div key={index} className={`border rounded-xl p-4 ${getStatusColor(agreement.status)}`}>
                <div className="flex items-center gap-3 mb-3">
                  <h4 className="text-lg font-semibold text-white">{agreement.name}</h4>
                  {getStatusIcon(agreement.status)}
                </div>
                <p className="text-gray-300 mb-3">{agreement.description}</p>
                <ul className="space-y-2">
                  {agreement.requirements.map((req, reqIndex) => (
                    <li key={reqIndex} className="flex items-center gap-2 text-gray-300 text-sm">
                      <div className="w-1.5 h-1.5 bg-green-400 rounded-full"></div>
                      {req}
                    </li>
                  ))}
                </ul>
              </div>
            ))}
          </div>
        </div>

        {/* Corporate Structure */}
        <div className="bg-white/10 backdrop-blur-md border border-white/20 rounded-2xl p-6">
          <div className="flex items-center gap-3 mb-6">
            <Shield className="w-6 h-6 text-indigo-400" />
            <h2 className="text-xl font-bold text-white">Corporate Structure</h2>
          </div>

          <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
            {legalData.corporateStructure.directors.map((director, index) => (
              <div key={index} className="bg-white/5 border border-white/10 rounded-xl p-4">
                <div className="flex items-center gap-3 mb-2">
                  <User className="w-5 h-5 text-indigo-400" />
                  <h4 className="text-white font-medium">{director.position}</h4>
                </div>
                <p className="text-gray-300 text-sm mb-2">{director.holder}</p>
                <p className="text-gray-400 text-xs">{director.notes}</p>
              </div>
            ))}
          </div>
        </div>

        {/* Compliance Checklist */}
        <div className="bg-white/10 backdrop-blur-md border border-white/20 rounded-2xl p-6">
          <div className="flex items-center gap-3 mb-6">
            <CheckCircle className="w-6 h-6 text-yellow-400" />
            <h2 className="text-xl font-bold text-white">Compliance Checklist</h2>
          </div>

          <div className="space-y-4">
            {legalData.compliance.map((item, index) => (
              <div key={index} className={`border rounded-xl p-4 ${getStatusColor(item.status)}`}>
                <div className="flex items-center justify-between mb-2">
                  <div className="flex items-center gap-3">
                    <h4 className="text-lg font-semibold text-white">{item.name}</h4>
                    {getStatusIcon(item.status)}
                  </div>
                  <span className="text-gray-400 text-sm">{item.dueDate}</span>
                </div>
                <p className="text-gray-300">{item.description}</p>
              </div>
            ))}
          </div>
        </div>

        {/* Legal Documents Upload */}
        <div className="bg-white/10 backdrop-blur-md border border-white/20 rounded-2xl p-6">
          <div className="flex items-center gap-3 mb-6">
            <FileText className="w-6 h-6 text-red-400" />
            <h2 className="text-xl font-bold text-white">Legal Documents</h2>
          </div>

          <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
            <div className="bg-white/5 border border-white/10 rounded-xl p-4 text-center">
              <FileText className="w-8 h-8 text-red-400 mx-auto mb-2" />
              <p className="text-white font-medium">Founder Agreements</p>
              <p className="text-gray-400 text-xs">Upload signed documents</p>
            </div>
            <div className="bg-white/5 border border-white/10 rounded-xl p-4 text-center">
              <FileText className="w-8 h-8 text-blue-400 mx-auto mb-2" />
              <p className="text-white font-medium">Incorporation Papers</p>
              <p className="text-gray-400 text-xs">SSM registration docs</p>
            </div>
            <div className="bg-white/5 border border-white/10 rounded-xl p-4 text-center">
              <FileText className="w-8 h-8 text-green-400 mx-auto mb-2" />
              <p className="text-white font-medium">Compliance Documents</p>
              <p className="text-gray-400 text-xs">NDAs, policies, etc.</p>
            </div>
          </div>
        </div>
      </div>
    </Layout>
  );
} 